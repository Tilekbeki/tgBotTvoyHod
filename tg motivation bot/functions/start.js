const {downloadRes}  = require('./downloadRes');
const {getNewQuote}  = require('./getNewQuote');
const {needHelp}  = require('./needHelp');
function start(bot){
    bot.on('text', async msg => {
        try {
    
            if(msg.text == '/start') {
                
                await bot.sendMessage(msg.chat.id, `–ë–æ–¥—Ä–æ–≥–æ –¥–µ–Ω–µ—á–∫–∞, —á–µ–ª–æ–≤–µ–∫üëã \n–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –í–û–ü–õ–û–¢–ò–¢–¨ –¶–ï–õ–ò –≤ –∂–∏–∑–Ω—å –∏ –¥–æ–∫–∞–∑–∞—Ç—å, —á—Ç–æ –¥–ª—è —Ç–µ–±—è –ù–ï–¢ –ù–ï–í–û–ó–ú–û–ñ–ù–û–ì–û‚ö° –¢–≤–æ–∏ —É—Å–ø–µ—Ö–∏ —Ç–æ—á–Ω–æ –ø—Ä–∏–Ω–µ—Å—É—Ç —Å–≤–æ–∏ –ø–ª–æ–¥—ã (P.S. —Å–µ—Ä–≤–∏—Å ¬´–î–í–ò–ì–ê–ô!¬ª –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Çüòâ`);
                await bot.sendMessage(msg.chat.id, `–ê –µ—â–µ –º—ã –ø–æ–æ—â—Ä—è–µ–º —Ü–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª–µ–Ω–Ω—ã—Ö, —Ç–∞–∫ —á—Ç–æ –î–í–ò–ì–ê–ô!`);
                await bot.sendMessage(msg.chat.id, `–í–æ—Ç —á—Ç–æ —è –º–æ–≥—É —Ç–µ–±–µ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å:`, {
    
                    reply_markup: {
            
                        inline_keyboard: [
            
                            [{text: '‚ö°Ô∏è –ï–°–¢–¨ –¶–ï–õ–¨', callback_data: 'createGoal'},{text: '‚≠êÔ∏è –ú–û–ò –¶–ï–õ–ò', callback_data: 'showGoals'}],
                            [{text: '–ó–∞–∫—Ä—ã—Ç—å –ú–µ–Ω—é', callback_data: 'closeMenu'}]
            
                        ]
            
                    }
            
                })
                
            }
            else if(msg.text == '/goals') {
    
                await bot.sendMessage(msg.chat.id, `–í–∞—à–∏ —Ü–µ–ª–∏ —Å–ø–∏—Å–æ–∫*`);
    
            }
            else if(msg.text == '/help' || msg.text == 'üëÅ‚Äçüó® –ü–æ–º–æ—â—å') {
    
                await bot.sendMessage(msg.chat.id, `–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å–≤—è–∂–∏—Ç–µ—Å—å  @VlaStrel*`);
    
            }
            else if(msg.text == '/menu') {
    
                await bot.sendMessage(msg.chat.id, `–ú–µ–Ω—é –±–æ—Ç–∞`, {
            
                    reply_markup: {
            
                        keyboard: [
            
                            ['‚ö°Ô∏è –ï–°–¢–¨ –¶–ï–õ–¨', '‚≠êÔ∏è –ú–û–ò –¶–ï–õ–ò'],
                            ['üëÅ‚Äçüó® –ü–æ–º–æ—â—å']
            
                        ]
            
                    }
            
                })
            
            }
            else if(msg.text == '/result') {
                downloadRes(bot, msg.chat.id, 1);
            }
            else if (msg.text == '/getMotivation') {
                getNewQuote(bot,msg.chat.id);
            } 
            else if (msg.text=='/helpme') {
                needHelp(bot, msg.chat.id, msg.chat.username)
            }
    
            // else {
            //     await bot.sendMessage(msg.chat.id, msg.text);
            // }
    
        }
        catch(error) {
    
            console.log(error);
    
        }
    });
}

module.exports = {start};