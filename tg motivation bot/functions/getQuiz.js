const { checkDeadlineAndNotify } = require('./checkDeadlineAndNotify');
const { getStatus } = require('./getStatus');
const { deleteEntities } = require('./deleteEntity');

// —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –æ–ø—Ä–æ—Å–Ω–∏–∫–∞
function getQuiz(bot, chatId, goalId, deadline, idProgress, isFirst) {
    if (isFirst) {
        bot.sendMessage(chatId, '–ó–¥–æ—Ä–æ–≤–æ! –¶–µ–ª—å –¥–æ—Å—Ç–æ–π–Ω–∞ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏üîù \n–ê —Ç–µ–ø–µ—Ä—å –¥–∞–≤–∞–π –ø—Ä–æ–≤–µ—Ä–∏–º —Ç–≤–æ—é –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –¥–ª—è –µ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—èüòè ').then(() => {
            bot.sendMessage(chatId, '–û—Ç–≤–µ—Ç—å –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –Ω–∞–ø–∏—à–∏ –≥–æ—Ç–æ–≤(–∞)¬ª').then(() => {
                bot.sendMessage(chatId, `http://localhost:3001/quiz?goalId=${goalId}&userId=${chatId}&isFirst=true`);
            });

            bot.once('text', async msg => {
                let message = msg.text;
                if (message.toLowerCase() === '–≥–æ—Ç–æ–≤' || message.toLowerCase() === '–≥–æ—Ç–æ–≤–∞') {
                    try {
                        const response = await fetch(`http://localhost:3000/quiz/${goalId}`);
                        if (response.ok) {
                            bot.sendMessage(chatId, '–û—Ç–ª–∏—á–Ω–æ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∑–∞—è–≤–∫—É‚Ä¶');
                            setTimeout(async () => {
                                const status = await getStatus(bot, idProgress);
                                if (status === 'active' || status === 'inProgress') {
                                    bot.sendMessage(chatId, '–ú–æ–º–µ–Ω—Ç –Ω–∞—Å—Ç–∞–ª ‚Äì –î–í–ò–ì–ê–ô –∫ —Å–≤–æ–µ–π —Ü–µ–ª–∏‚ö°üòÄ\n–î–æ—Å—Ç–∏–≥–∞–π —É—Å–ø–µ—Ö–æ–≤ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π —Å—Ä–æ–∫ –∏ –ø—Ä–∏—Å—ã–ª–∞–π —Å–≤–æ–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã (—Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, –∞—É–¥–∏–æ –∏ –¥—Ä. –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è) üôå –ò –∂–¥–∏ –Ω–∞–≥—Ä–∞–¥—É –∑–∞ —Å–≤–æ—é —Ü–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª–µ–Ω–Ω–æ—Å—Ç—å/\n–¶–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª–µ–Ω–Ω–æ—Å—Ç—å –ø—Ä–∏–Ω–æ—Å–∏—Ç –ø–æ–¥–∞—Ä–æ—á–∫–∏/ –¶–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª–µ–Ω–Ω–æ—Å—Ç—å –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–∞–µ—Ç—Å—è)/–°—Ç—Ä–µ–º–ª–µ–Ω–∏—è –≤—Å–µ–≥–¥–∞ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–∞—é—Ç—Å—èüòÅ');
                                    checkDeadlineAndNotify(bot, chatId, deadline, idProgress, goalId);
                                } else if (status === 'canceled') {
                                    deleteEntities(bot, 'quiz', goalId);
                                    bot.sendMessage(chatId, '–¢–≤–æ—è —Ü–µ–ª—å –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞!').then(async () => {
                                        const responseForMessage = await fetch(`http://localhost:3000/progressinfo/${idProgress}`);
                                        if (responseForMessage.ok) {
                                            const responseBodyMessage = await responseForMessage.json();
                                            let messageOfAdmin = responseBodyMessage.comment;
                                            bot.sendMessage(chatId, `–û—Ç–∑—ã–≤ –æ—Ç –∞–¥–º–∏–Ω–∞: ${messageOfAdmin}`);
                                        }
                                    });
                                } else {
                                    bot.sendMessage(chatId, `–°—Ç–∞—Ç—É—Å: ${status}`);
                                }
                            }, 1000 * 60); // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —á–µ—Ä–µ–∑ 1 –º–∏–Ω—É—Ç—É
                        } else {
                            console.log('–ó–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
                            askToFillQuiz();
                        }
                    } catch (error) {
                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞:', error);
                        askToFillQuiz();
                    }
                } else {
                    askToFillQuiz();
                }
            });

            function askToFillQuiz() {
                bot.sendMessage(chatId, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ "–≥–æ—Ç–æ–≤" –∏–ª–∏ "–≥–æ—Ç–æ–≤–∞", —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.');
                getQuiz(bot, chatId, goalId, deadline, idProgress, isFirst);
            }
        });
    } else {
        bot.sendMessage(chatId, '–î–∞–≤–∞–π –∫–∞ –ø—Ä–æ–≤–µ—Ä–∏–º —É—Ä–æ–≤–µ–Ω—å —Ç–≤–æ–µ–π –º–æ—Ç–∏–≤–∞—Ü–∏–∏ —Å–µ–π—á–∞—Å!').then(() => {
            bot.sendMessage(chatId, `http://localhost:3001/quiz?goalId=${goalId}&userId=${chatId}&isFirst=false`);

            bot.once('text', async msg => {
                let message = msg.text;
                bot.sendMessage(chatId, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ "–≥–æ—Ç–æ–≤" –∏–ª–∏ "–≥–æ—Ç–æ–≤–∞", —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.');
                if (message.toLowerCase() === '–≥–æ—Ç–æ–≤' || message.toLowerCase() === '–≥–æ—Ç–æ–≤–∞') {
                    setTimeout(async () => {
                        const response2 = await fetch(`http://localhost:3000/quiz/${goalId}`);
                        if (response2.ok) {
                            bot.sendMessage(chatId, '–û—Ç–ª–∏—á–Ω–æ! –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∑–∞—è–≤–∫—É‚Ä¶');
                        } else {
                            console.log('–ó–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
                            askToFillQuiz();
                        }
                    }, 1000 * 60); // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —á–µ—Ä–µ–∑ 1 –º–∏–Ω—É—Ç—É
                } else {
                    askToFillQuiz();
                }
            });

            function askToFillQuiz() {
                bot.sendMessage(chatId, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ "–≥–æ—Ç–æ–≤" –∏–ª–∏ "–≥–æ—Ç–æ–≤–∞", —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.');
                getQuiz(bot, chatId, goalId, deadline, idProgress, isFirst);
            }
        });
    }
}

module.exports = { getQuiz };
