const {getNewQuote} = require('./getNewQuote');
const {checkEnd} = require('./checkEnd');
const {downloadRes} = require('./downloadRes');

function checkDeadlineAndNotify(bot, chatId, deadlineString, idProgress, goalId, app) {
    // –ü–æ–ª—É—á–∞–µ–º —Å–µ–≥–æ–¥–Ω—è—à–Ω—é—é –¥–∞—Ç—É
    const today = new Date();

    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å–µ–≥–æ–¥–Ω—è—à–Ω—é—é –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç ISO 8601
    const todayISO = today.toISOString();

    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫—É –¥–µ–¥–ª–∞–π–Ω–∞ –≤ –æ–±—ä–µ–∫—Ç Date
    const deadline = new Date(deadlineString);

    // –í—ã—á–∏—Å–ª—è–µ–º —Ä–∞–∑–Ω–∏—Ü—É –≤–æ –≤—Ä–µ–º–µ–Ω–∏ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
    const timeDifferenceInMilliseconds = 1000 * 60 * 2;
    const monthInMilliseconds = 1000 * 60 * 60 * 24 * 30;
    const firstWeek = 1000 * 60 * 60 * 7; // –Ω–µ–¥–µ–ª—è
    const firstFifteenDays = 1000 * 60 * 60 * 15; // 15 —á–∏—Å–ª–æ
    const weekBeforeFinished = timeDifferenceInMilliseconds - firstWeek; // 23 —á–∏—Å–ª–æ

    // –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤ —Ç–∞–π–º–µ—Ä–æ–≤
    let timeouts = [];

    // –ï—Å–ª–∏ –≤—Ä–µ–º—è —É–∂–µ –ø—Ä–æ—à–ª–æ, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    if (timeDifferenceInMilliseconds <= 0) {
        bot.sendMessage(chatId, '–í—Å–µ —Å—Ä–æ–∫–∏ –Ω–∞—Å—Ç—É–ø–∏–ª–∏');
        return;
    } else if (timeDifferenceInMilliseconds >= monthInMilliseconds) {
        timeouts.push(setTimeout(() => {
            getNewQuote(bot, chatId);
        }, firstWeek));
        timeouts.push(setTimeout(() => {
            getNewQuote(bot, chatId, 'yes');
        }, firstFifteenDays));
        timeouts.push(setTimeout(() => {
            getNewQuote(bot, chatId, 'yes');
        }, weekBeforeFinished));
    } else if (timeDifferenceInMilliseconds < monthInMilliseconds) {
        const half = timeDifferenceInMilliseconds / 2;
        timeouts.push(setTimeout(() => {
            getNewQuote(bot, chatId, 'yes');
        }, half));
    }

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ —Ä–∞–∑–Ω–∏—Ü—É –≤–æ –≤—Ä–µ–º–µ–Ω–∏
    timeouts.push(setTimeout(() => {
        bot.sendMessage(chatId, '–í—Å–µ —Å—Ä–æ–∫–∏ –Ω–∞—Å—Ç—É–ø–∏–ª–∏');
        console.log(`–∞–π–¥–∏ –ø–æ—Ç–µ—Ä—è–Ω–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ ${idProgress}`)
        checkEnd(bot, chatId, idProgress, goalId, app);
    }, timeDifferenceInMilliseconds));

    //–†–µ–∞–∫—Ü–∏—è –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    // bot.on('photo', async img => {
    //     try {
    //         // –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö —Ç–∞–π–º–µ—Ä–æ–≤
    //         timeouts.forEach(timeout => clearTimeout(timeout));

    //         await bot.sendMessage(chatId, "–í–∞—É! –Ø –≤–∏–∂—É —Ç—ã —Ä–µ–∞–ª–∏–∑–æ–≤–∞–ª —Å–≤–æ—é —Ü–µ–ª—å —Ä–∞–Ω—å—à–µ! \n–î–∞–≤–∞–π –∑–∞—Ñ–∏–∫—Å–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç.üí™\n–ù–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É /result");
    //     } catch (error) {
    //         console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
    //     }
    // });


    const {downloadRes} = require('./downloadRes');
    bot.on('text', async msg => {
        if (msg.text==='/complete') {
            if (chatId) { // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –æ—Ç —Ç–æ–≥–æ –∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                timeouts.forEach(timeout => clearTimeout(timeout));
                bot.sendMessage(chatId, 'Mission completed! –°–¥–µ–ª–∞–ª –¥–µ–ª–æ ‚Äì –≥—É–ª—è–π —Å–º–µ–ª–æ! ‚ö°Ô∏è –ü—Ä–∏—Å—ã–ª–∞–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.');
                downloadRes(bot, chatId, idProgress, goalId, app); // –í—ã–∑–æ–≤ downloadRes
                return; // –ó–∞–≤–µ—Ä—à–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, —á—Ç–æ–±—ã –ø—Ä–µ—Ä–≤–∞—Ç—å –≤—Å–µ –¥–∞–ª—å–Ω–µ–π—à–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
            }
        }
    });

 
}

module.exports = {checkDeadlineAndNotify};
