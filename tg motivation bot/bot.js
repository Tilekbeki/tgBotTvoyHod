
const { response } = require('express');
const TelegramBot = require('node-telegram-bot-api');
const {commands}  = require('./blocks/comands');
const {quotes}  = require('./blocks/quotes');
const {start}  = require('./functions/start');
const {getCategories}  = require('./functions/getCategories');
const {checkUserExist}  = require('./functions/checkUserExist');





const API_KEY_BOT = '6738232005:AAEIQJsUxGAnCieXZeszbdOtpVmMlHQ40QM';

const bot = new TelegramBot(API_KEY_BOT, {
    polling: {
      interval: 300,
      autoStart: true
    }
  });
  
// –ú–∞—Å—Å–∏–≤, —á—Ç–æ–±—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ —Ü–∏—Ç–∞—Ç—ã
let curDeadline;

let isCreatingGoal = false;
let progressinfoId;
//–æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏
bot.on("polling_error", err => console.log(err.data.error.message));


bot.setMyCommands(commands);


start(bot);
    //–∑–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é
    bot.on('callback_query', async ctx => {
        try {
            switch(ctx.data) {
                case "closeMenu":
                    await bot.deleteMessage(ctx.message.chat.id, ctx.message.message_id);
                    break;
                case "createGoal":
                    await bot.deleteMessage(ctx.message.chat.id, ctx.message.message_id);
                    await bot.sendMessage(ctx.message.chat.id, "–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Å–≤–æ–µ–π —Ü–µ–ª–∏üëà");
                    getCategories(bot, ctx.message.chat.id);
                    break;
                default:
                    const category = ctx.data; // –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
                    const chatId = ctx.message.chat.id;
    
                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                    bot.sendMessage(chatId, `–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é: ${category}`)
                        .then(() => {
                            // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
                            checkUserExist(bot, chatId, ctx.message.chat.first_name, category);
                            bot.deleteMessage(chatId, ctx.message.message_id)
                                .catch(error => console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error));
                        })
                        .catch(error => console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', error));
                    break;
            }
        }
        catch(error) {
            console.log(error);
        }
    });
    